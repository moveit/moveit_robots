<launch>
  <arg name="config" default="true"/>
  <arg name="rviz_config" default="$(find baxter_moveit_config)/launch/moveit.rviz" />
  <arg name="planner" default="ompl" />
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the
  joint_state_publisher.
  The latter one maintains and publishes the current joint
  configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around"manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Left and right electric gripper params. Set to true to check for collisions for their links -->
  <arg name="right_electric_gripper" default="false"/>
  <arg name="left_electric_gripper" default="false"/>
  <!-- Set the kinematic tips for the left_arm and right_arm move_groups -->
  <arg name="left_tip_name" default="left_gripper"/>
  <arg name="right_tip_name" default="right_gripper"/>
  <include file="$(find baxter_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="left_electric_gripper" value="$(arg left_electric_gripper)"/>
    <arg name="right_electric_gripper" value="$(arg right_electric_gripper)"/>
    <arg name="left_tip_name" value="$(arg left_tip_name)"/>
    <arg name="right_tip_name" value="$(arg right_tip_name)"/>
  </include>

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <remap from="/joint_states" to="/robot/joint_states" />
    <param name="/use_gui" value="$(arg use_gui)"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
    <remap from="/joint_states" to="/robot/joint_states" />
  </node>
  <arg name="kinect" default="false" />
  <arg name="xtion" default="false" />
  <arg name="camera_link_pose" default="0.15 0.075 0.5 0.0 0.7854 0.0"/>
  <include file="$(find baxter_moveit_config)/launch/move_group.launch">
    <arg name="kinect" value="$(arg kinect)" />
    <arg name="xtion" value="$(arg xtion)" />
    <arg name="fake_execution" value="true"/>
    <arg name="camera_link_pose" value="$(arg camera_link_pose)"/>
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="planner" value="$(arg planner)" />
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <include file="$(find baxter_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="$(arg config)" />
    <arg name="rviz_config" value="$(arg rviz_config)" />
  </include>

  <!-- As of ROS Kinetic / Ubuntu 16.04 the mongo driver does not have a binary and must be installed from source.
       Therefore, this functionality is disabled by default. For more info:
       https://github.com/ros-planning/moveit/issues/123
  -->

  <!-- If this package is installed, setting 'db' as 'false' or db_path to user permission dir is required. -->
  <arg name="db" default="false" />
  <arg name="db_path" default="$(find baxter_moveit_config)/default_warehouse_mongo_db" />
  <group if="$(arg db)">
    <include file="$(find baxter_moveit_config)/launch/default_warehouse_db.launch">
      <arg name="moveit_warehouse_database_path" value="$(arg db_path)" />
    </include>
  </group>

  <node name="world_to_base" pkg="tf" type="static_transform_publisher"
        args="0 0 0.9 0 0 0 world base 10" />
</launch>
